#!/usr/bin/env bash
# Copyright (c) 2018 Mastercard

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# find_p11_lib: a trivial function to find a library.
function find_p11_lib()
{
    case "$(uname -s)" in
	Darwin|*BSD)
	    paths=(/usr/local/lib/softhsm/libsofthsm2.so /usr/lib/softhsm/libsofthsm2.so)
	    ;;

	Linux)
	    paths=(/usr/lib/softhsm/libsofthsm2.so /usr/lib64/pkcs11/libsofthsm2.so)
	    ;;

	SunOS)
	    paths=(/usr/local/lib/libsofthsm2.so /usr/lib/softhsm/libsofthsm2.so /usr/lib/libsofthsm2.so)
	    ;;
	*)
	    paths=(/usr/local/lib/softhsm/libsofthsm2.so /usr/lib/softhsm/libsofthsm2.so)
	    ;;
    esac

    for path in ${paths[@]}; do
	if [ -e $path ]; then
	    echo $path
	    return 0
	fi
    done

    echo "NOT FOUND"
    return 1
}

# source .pkcs11rc from local directory, and if not, from $HOME directory
if [ -z "$NORC" ]; then
    if [ -e ./.pkcs11rc ]; then
	source ./.pkcs11rc
    elif [ -e $HOME/.pkcs11rc ]; then
	source $HOME/.pkcs11rc
    fi
fi

################################################################################

# library
PKCS11LIB=${PKCS11LIB:-$(find_p11_lib)}

if [ "$PKCS11LIB" == "NOT FOUND" ]; then
    echo "***Error: PKCS#11 Library not found, please set PKCS11LIB accordingly."
    exit 1
fi

#if NOSLOT is defined, we skip PKCS11SLOT (useful for p11slotinfo invocation)
if [ -z "$NOSLOT" ]; then
    PKCS11SLOT=${PKCS11SLOT:-0}
fi
PKCS11PASSWORD=${PKCS11PASSWORD:-changeit}
SOFTHSM_CONF=${SOFTHSM_CONF:-softhsm.conf}
# Note: there is no default value for PKCS11TOKENLABEL

################################################################################
variables=(PKCS11LIB PKCS11NSSDIR PKCS11SLOT PKCS11TOKENLABEL PKCS11PASSWORD SOFTHSM_CONF)
environment=

for v in ${variables[@]}; do
    if [ -n "${!v}" ]; then
	environment+=("$v=${!v}")
    fi
done

quoted=
for item in $@; do
    quoted+=($(printf "%q" $item))
done

eval "${environment[@]} ${quoted[@]}"
exit $?
